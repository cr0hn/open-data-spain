version: '3.3'services:  traefik:    # Use the latest v2.2.x Traefik image available    image: traefik:v2.9.10    ports:      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS      - 80:80      - 443:443      - 8080:8080    deploy:      placement:        constraints: [ node.role == manager ]      restart_policy:        condition: on-failure      update_config:        parallelism: 1#        delay: 10s      mode: global      labels:        # Enable Traefik for this service, to make it available in the public network        - traefik.enable=true        - traefik.docker.network=traefik-public        - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080        # Dashboard Authentication        ## HTTP        - traefik.http.routers.traefik-dashboard.rule=Host(`dc45f18e53584a99b3182c67ca93ae72-traefik.open-data-spain.io`)        - traefik.http.routers.traefik-dashboard.entrypoints=http    volumes:      - /var/run/docker.sock:/var/run/docker.sock:ro    command:      # Enable Docker in Traefik, so that it reads labels from Docker services      - --providers.docker      - --providers.docker.exposedbydefault=false      - --providers.docker.swarmmode      # Create an entrypoint "http" listening on port 80      - --entryPoints.http.address=:80      - --log      - --api.dashboard=true      - --api.insecure=true    networks:      # Use the public network created to be shared between Traefik and      # any other service that needs to be publicly available with HTTPS      - traefik-publicnetworks:  # Use the previously created public network "traefik-public", shared with other  # services that need to be publicly available via this Traefik  traefik-public:    external: true