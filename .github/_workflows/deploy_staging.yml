name: Deploy to Docker Swarm Staging
on:
  push:
    paths:
      - 'deployment/elena-dashboard-staging.yaml'
      - 'Dockerfile'
      - 'elena/**'
      - 'requirements/**'
      - 'manage.py'
      - 'entrypoint*'
      - 'poetry.lock'
    branches:
      - main
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Digital Ocean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Do login to Digital Ocean
        run: doctl registry login --expiry-seconds 1200

      - name: Build Docker image
        run: docker build -t elena-dashboard-staging .

      - name: Do login to Digital Ocean
        run: |
          docker tag elena-dashboard-staging registry.digitalocean.com/elena/elena-dashboard-staging:$GITHUB_SHA
          docker tag elena-dashboard-staging registry.digitalocean.com/elena/elena-dashboard-staging:latest

      - name: Push to Digital Ocean
        run: |
          docker push registry.digitalocean.com/elena/elena-dashboard-staging:$GITHUB_SHA
          docker push registry.digitalocean.com/elena/elena-dashboard-staging:latest

      - name: Deploy to swarm
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.DOCKER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            echo "${{ secrets.DOCKER_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
            chmod 600 ~/.ssh/id_rsa*
            ssh-keyscan -H ${{ secrets.SWARM_MASTER_NODE }} >> ~/.ssh/known_hosts
            export DOCKER_HOST="ssh://root@${{ secrets.SWARM_MASTER_NODE }}"
            docker stack deploy -c deployment/elena-dashboard-staging.yaml --with-registry-auth --resolve-image always elena-dashboard-staging
